add_safehouses() 

    - player safehouses: [(6, 1), (6, 2), (6, 3), (6, 4)]

    - new path: {0: (4, 0), 1: (4, 1), 2: (4, 2), 3: (4, 3), 4: (4, 4), 5: (3, 4), 6: (2, 4), 7: (1, 4), 8: (0, 4), 9: (0, 6), 10: (0, 8), 11: (1, 8), 12: (2, 8), 13: (3, 8), 14: (4, 8), 15: (4, 9), 16: (4, 10), 17: (4, 11), 18: (4, 12), 19: (6, 12), 20: (8, 12), 21: (8, 11), 22: (8, 10), 23: (8, 9), 24: (8, 8), 25: (9, 8), 26: (10, 8), 27: (11, 8), 28: (12, 8), 29: (12, 6), 30: (12, 4), 31: (11, 4), 32: (10, 4), 33: (9, 4), 34: (8, 4), 35: (8, 3), 36: (8, 2), 37: (8, 1), 38: (8, 0), 39: (6, 0), 40: (6, 1), 41: (6, 2), 42: (6, 3), 43: (6, 4)} 

has_valid_moves: 

    - curr_player: CurrentPlayer { id: 0, player_action: WaitingRoll, selected_pawn_id: None, prev_hover_flat: 0, prev_hover_position: (0, 0), curr_hover_flat: 0, curr_hover_position: (4, 0), roll: Some(6) } 

    - roll: 6

select_pawn: Some(3) 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedHome, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (1, 1) }), position: (1, 1) }

is_valid_move() - Checking for :

    - selected_pawn_field Field { is_visible: true, is_hovered: false, kind: RedHome, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (1, 1) }), position: (1, 1) }

    - new_field_id: (4, 0) 

move_pawn() - Before moving pawn: 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedHome, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (1, 1) }), position: (1, 1) } 

    - hovered_field: Field { is_visible: true, is_hovered: true, kind: RedStart, pawn: None, position: (4, 0) } 

move_pawn() - After moving pawn: 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedHome, pawn: None, position: (1, 1) } 

    - hovered_field: Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) } 

move_pawn_to_start() - Ok() - 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedHome, pawn: None, position: (1, 1) } 

    - curr_pawn: Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) } 

move_pawn_to_start() - Ok() - 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) } 

    - player: Player { id: 0, order: 0, pawns: [Pawn { id: 0, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (0, 0) }, Pawn { id: 1, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (0, 1) }, Pawn { id: 2, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (1, 0) }, Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }], pawn_color: RED, home_pos: [(0, 0), (0, 1), (1, 0), (1, 1)], safehouse_pos: [(6, 1), (6, 2), (6, 3), (6, 4)], safehouse_kind: RedSafehouse, home_field_kind: RedHome, start_field_kind: RedStart, start_pos: (4, 0), pawns_on_board: 1 } 

switching players - repeat_move() 

    - curr_player CurrentPlayer { id: 0, player_action: Playing, selected_pawn_id: Some(3), prev_hover_flat: 0, prev_hover_position: (4, 0), curr_hover_flat: 0, curr_hover_position: (4, 0), roll: Some(6) }

has_valid_moves: 

    - curr_player: CurrentPlayer { id: 0, player_action: WaitingRoll, selected_pawn_id: None, prev_hover_flat: 0, prev_hover_position: (4, 0), curr_hover_flat: 0, curr_hover_position: (4, 0), roll: Some(5) } 

    - roll: 5

select_pawn: Some(3) 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) }

is_valid_move() - Checking for :

    - selected_pawn_field Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) }

    - new_field_id: (4, 4) 

move_field() unreachable_field: 

    - curr_player: CurrentPlayer { id: 0, player_action: Hovering, selected_pawn_id: Some(3), prev_hover_flat: 3, prev_hover_position: (4, 3), curr_hover_flat: 4, curr_hover_position: (4, 4), roll: Some(5) } 

is_valid_move() - Checking for :

    - selected_pawn_field Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) }

    - new_field_id: (4, 3) 

move_field() unreachable_field: 

    - curr_player: CurrentPlayer { id: 0, player_action: Hovering, selected_pawn_id: Some(3), prev_hover_flat: 4, prev_hover_position: (4, 4), curr_hover_flat: 3, curr_hover_position: (4, 3), roll: Some(5) } 

is_valid_move() - Checking for :

    - selected_pawn_field Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) }

    - new_field_id: (4, 2) 

move_field() unreachable_field: 

    - curr_player: CurrentPlayer { id: 0, player_action: Hovering, selected_pawn_id: Some(3), prev_hover_flat: 3, prev_hover_position: (4, 3), curr_hover_flat: 2, curr_hover_position: (4, 2), roll: Some(5) } 

is_valid_move() - Checking for :

    - selected_pawn_field Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) }

    - new_field_id: (3, 4) 

move_pawn() - Before moving pawn: 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (4, 0) }), position: (4, 0) } 

    - hovered_field: Field { is_visible: true, is_hovered: true, kind: Path, pawn: None, position: (3, 4) } 

move_pawn() - After moving pawn: 

    - selected_pawn_field: Field { is_visible: true, is_hovered: false, kind: RedStart, pawn: None, position: (4, 0) } 

    - hovered_field: Field { is_visible: true, is_hovered: false, kind: Path, pawn: Some(Pawn { id: 3, color: RED, color_pallete: PawnColorPallet { primary: Red, hovered: Rgb(139, 0, 0), disabled: Rgb(139, 0, 0) }, player_id: 0, position: (3, 4) }), position: (3, 4) } 

